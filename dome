29/01/2025    Wednesday

getElementById():
return the element having the given id value.

<h1 id="a">i am jaanu</h1> 
    <h1 id="b">i am tanuj</h1>
    <h1 id="c" >i am aayu</h1>

    <script>
      let x = document.getElementByClassName("a");
      console.log(x)

getElementByClassName():
return all the elements having the same class name
 

<h1 id="a" class="a">i am jaanu</h1>
    <h1 id="b" class="b">i am tanuj</h1>
    <h1 id="c" class="c">i am aayu</h1>

    <h1 class="a">i am jahnavi</h1>
    <script>
      let x = document.getElementByClassName("a");
      console.log(x);


getElementByClassName():
return an html collection object 
An html collection is an array like list or html elements.
The length property provides the size of collection.


getElementByTagName():

--This method 


<h1 id="a" class="a">i am jaanu</h1>
    <h1 id="b" class="b">i am tanuj</h1>
    <h1 id="c" class="c">i am aayu</h1>

    <h1 class="a">i am jahnavi</h1>
    <script>
      let x = document.getElementByTagName("h1");
      console.log(x);

      for (let i = 0; i < x.length; i++) {
        console.log(x[i]);
      }

Python ; Java
1.Conditional
2.loops
3.functions
4.OOPS
5.Exceptional handling
6.File handling


getting elements by using query selector methods

The document query selector methods select the html elements by tagname , by id , class name.

Queryselctor: Can be used to select HTML element by its tagname , by id , class name ; 
-->it selects the first element.

Example:

<h1 id="a" class="a">i am jaanu</h1>
    <h1 id="b" class="b">i am tanuj</h1>
    <h1 id="c" class="c">i am aayu</h1>

    <h1 class="a">i am jahnavi</h1>
    <script>
      let x = document.querySelector("h1");
      console.log(x);
Output: <h1 id="aa" class="a">i am sai</hi>

QueryselectorAll:
-->it selects all the html elements by its class name and class name and tagname

Manipulating Elements:
<h1>jaa</h1>
To create HTML Elements:

createElement() -create a new element 
-->method -document .createElement()

textContent():   -property
